version: "3.9"

services:
  redis:
    image: redis:6.2
    volumes:
      - redis-data:/data
    env_file:
      - .env.test
    networks:
      - webnet

  rabbitmq:
    image: rabbitmq:latest
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME-rabbit}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD-passwd}
    env_file:
      - .env.test
    networks:
      - webnet


  worker:
    build:
      dockerfile: Dockerfile.test
      context: ./worker
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB-"voice-banking"}
      - POSTGRES_USER=${POSTGRES_USER-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-postgres}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CELERY_DB_INDEX=10
      - REDIS_STORE_DB_INDEX=0
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME-rabbit}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD-passwd}
      - RABBITMQ_PORT=5672
      - SECRET=${SECRET-default}
    depends_on:
      - redis
      - rabbitmq
    command: celery -A app.celery-app.tasks worker --loglevel=INFO
    env_file:
      - .env.test
    networks:
      - webnet

  db:
    image: postgres:15
    volumes:
      - db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB-"voice-baning"}
      - POSTGRES_USER=${POSTGRES_USER-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-password}
    env_file:
      - .env.test
    networks:
      - webnet

  backend:
    build:
      dockerfile: Dockerfile.test
      context: ./backend
    depends_on:
      - db
    ports:
      - 80:8080
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB-"voice-banking"}
      - POSTGRES_USER=${POSTGRES_USER-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-postgres}
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER-postgres}:${POSTGRES_PASSWORD-postgres}@db:5432
      - SECRET=${SECRET-default}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CELERY_DB_INDEX=10
      - REDIS_STORE_DB_INDEX=0
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME-rabbit}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD-passwd}
      - RABBITMQ_PORT=5672
    env_file:
      - .env.test
    networks:
      - webnet

  telegram:
    build:
      context: Dockerfile.test
      dockerfile: ./telegram
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    env_file:
      - .env.test
    networks:
      - webnet

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
    env_file:
      - .env.test
    networks:
      - webnet

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - DEFAULT_EMAIL=${ACMEEMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/acme.sh
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
    env_file:
      - .env.test
    networks:
      - webnet

  frontend:
    build:
      dockerfile: Dockerfile.test
      context: ./frontend
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=${DOMAIN}
      - VIRTUAL_PORT=9000
      - LETSENCRYPT_HOST=${DOMAIN}
    env_file:
      - .env.test
    networks:
      - webnet

volumes:
  db-data:
  redis-data:
  rabbitmq-data:
  certs:
  html:

networks:
  webnet:
    external: true
